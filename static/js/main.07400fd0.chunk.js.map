{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/UserInfo/UserInfo.module.css","components/Avatar/Avatar.module.css","components/UserStats/UserStats.module.css","components/Container/Container.module.css","components/Avatar/Avatar.js","components/UserInfo/UserInfo.js","components/UserStats/UserStats.js","components/Profile/Profile.js","components/Section/Section.js","components/Container/Container.js","js/getRandomColor.js","components/Statistics/Statistics.js","components/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Avatar","url","userName","type","className","s","src","alt","UserInfo","name","tag","location","avatar","description","UserStats","stats","followers","views","likes","Profile","Section","children","Container","container","getRandomColor","color","i","Math","floor","random","Statistics","title","titleWrapper","map","stat","statsItem","style","backgroundColor","label","percentage","id","FriendListItem","statusClass","isOnline","status","defaultProps","FriendList","friends","list","listItem","TransactionHistory","items","transactionHistory","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07400fd0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleWrapper\":\"Statistics_titleWrapper__28Hz4\",\"statsItem\":\"Statistics_statsItem__2mtGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__N5Wgd\",\"listItem\":\"FriendList_listItem__uy_nO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendListItem_status__3rXJp\",\"online\":\"FriendListItem_online__3H0uN\",\"offline\":\"FriendListItem_offline__rrogY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__1k0Uk\",\"type\":\"TransactionHistory_type__2Q5st\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"UserInfo_description__14_a3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatarInProfile\":\"Avatar_avatarInProfile__1Vg4d\",\"avatarInFriendList\":\"Avatar_avatarInFriendList__3Pd7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"UserStats_stats__2XfP6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3RIox\"};","import s from './Avatar.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Avatar({ url, userName, type }) {\n    return <img className={s[type]} src={url} alt={`${userName} avatar`} />;\n}\n\nAvatar.propTypes = {\n    url: PropTypes.string.isRequired,\n    userName: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default Avatar;\n","import s from './UserInfo.module.css';\nimport PropTypes from 'prop-types';\nimport Avatar from '../Avatar/Avatar';\n\nfunction UserInfo({ name, tag, location, avatar }) {\n    return (\n        <div className={s.description}>\n            <Avatar url={avatar} userName={name} type=\"avatarInProfile\" />\n            <p className=\"name\">\n                <b>{name}</b>\n            </p>\n            <p className=\"tag\">@{tag}</p>\n            <p className=\"location\">{location}</p>\n        </div>\n    );\n}\n\nUserInfo.propTypes = {\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n};\n\nexport default UserInfo;\n","import s from './UserStats.module.css';\nimport PropTypes from 'prop-types';\n\nfunction UserStats({ stats: { followers, views, likes } }) {\n    return (\n        <ul className={`${s.stats} grid`}>\n            <li className=\"gridItem\">\n                <span className=\"label\">Followers</span>\n                <span className=\"quantity\">\n                    <b>{followers}</b>\n                </span>\n            </li>\n            <li className=\"gridItem\">\n                <span className=\"label\">Views</span>\n                <span className=\"quantity\">\n                    <b>{views}</b>\n                </span>\n            </li>\n            <li className=\"gridItem\">\n                <span className=\"label\">Likes</span>\n                <span className=\"quantity\">\n                    <b>{likes}</b>\n                </span>\n            </li>\n        </ul>\n    );\n}\n\nUserStats.propTypes = {\n    stats: PropTypes.objectOf(\n        PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    ).isRequired,\n};\n\nexport default UserStats;\n","import UserInfo from '../UserInfo/UserInfo';\nimport UserStats from '../UserStats/UserStats';\n\nfunction Profile({ name, tag, location, avatar, stats }) {\n    return (\n        <div>\n            <UserInfo name={name} tag={tag} location={location} avatar={avatar} />\n            <UserStats stats={stats} />\n        </div>\n    );\n}\n\nexport default Profile;\n","import PropTypes from 'prop-types';\n\nfunction Section({ children }) {\n    return <section>{children}</section>;\n}\n\nSection.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Section;\n","import s from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Container({ children }) {\n    return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Container;\n","export default function getRandomColor() {\n    const characters = '0123456789ABCDEF';\n    let color = '#';\n    for (let i = 0; i < 6; i += 1) {\n        color += characters[Math.floor(Math.random() * 16)];\n    }\n\n    return color;\n}\n","import s from './Statistics.module.css';\nimport PropTypes from 'prop-types';\nimport getRandomColor from '../../js/getRandomColor';\n\nfunction Statistics({ title, stats }) {\n    return (\n        <>\n            {title && (\n                <div className={s.titleWrapper}>\n                    <h2 className=\"title\">{title}</h2>\n                </div>\n            )}\n\n            <ul className=\"grid\">\n                {stats.map(stat => (\n                    <li\n                        className={`${s.statsItem} gridItem`}\n                        style={{\n                            backgroundColor: getRandomColor(),\n                        }}\n                        key={stat.id}\n                    >\n                        <span className=\"label\">{stat.label}</span>\n                        <span className=\"percentage\">{stat.percentage}%</span>\n                    </li>\n                ))}\n            </ul>\n        </>\n    );\n}\n\nStatistics.propTypes = {\n    title: PropTypes.string,\n    stats: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            label: PropTypes.string.isRequired,\n            percentage: PropTypes.oneOfType([\n                PropTypes.string,\n                PropTypes.number,\n            ]).isRequired,\n        }),\n    ).isRequired,\n};\n\nexport default Statistics;\n","import s from './FriendListItem.module.css';\nimport PropTypes from 'prop-types';\nimport Avatar from '../Avatar/Avatar';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n    const statusClass = isOnline ? 'online' : 'offline';\n\n    return (\n        <>\n            <span className={`${s.status} ${s[statusClass]}`}></span>\n            <Avatar url={avatar} userName={name} type=\"avatarInFriendList\" />\n            <p className=\"name\">{name}</p>\n        </>\n    );\n}\n\nFriendListItem.defaultProps = {\n    isOnline: false,\n};\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import s from './FriendList.module.css';\nimport PropTypes from 'prop-types';\nimport FriendListItem from '../FriendListItem/FriendListItem';\n\nfunction FriendList({ friends }) {\n    return (\n        <ul className={s.list}>\n            {friends.map(({ avatar, name, isOnline, id }) => (\n                <li className={s.listItem} key={id}>\n                    <FriendListItem\n                        avatar={avatar}\n                        name={name}\n                        isOnline={isOnline}\n                    />\n                </li>\n            ))}\n        </ul>\n    );\n}\n\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n        }),\n    ).isRequired,\n};\n\nexport default FriendList;\n","import s from './TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nfunction TransactionHistory({ items }) {\n    return (\n        <table className={s.transactionHistory}>\n            <thead>\n                <tr>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {items.map(({ id, type, amount, currency }) => (\n                    <tr key={id}>\n                        <td className={s.type}>{type}</td>\n                        <td>{amount}</td>\n                        <td>{currency}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    );\n}\n\nTransactionHistory.propTypes = {\n    items: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                .isRequired,\n            type: PropTypes.string.isRequired,\n            amount: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n                .isRequired,\n            currency: PropTypes.string.isRequired,\n        }).isRequired,\n    ).isRequired,\n};\n\nexport default TransactionHistory;\n","import user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\nimport Profile from './components/Profile/Profile';\nimport Section from './components/Section/Section';\nimport Container from './components/Container/Container';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\n\nfunction App() {\n    return (\n        <>\n            <Section>\n                <Container>\n                    <Profile\n                        name={user.name}\n                        tag={user.tag}\n                        location={user.location}\n                        avatar={user.avatar}\n                        stats={user.stats}\n                    />\n                </Container>\n            </Section>\n\n            <Section>\n                <Container>\n                    <Statistics title=\"UPLOAD STATS\" stats={statisticalData} />\n                </Container>\n            </Section>\n\n            <Section>\n                <Container>\n                    <FriendList friends={friends} />\n                </Container>\n            </Section>\n\n            <Section>\n                <Container>\n                    <TransactionHistory items={transactions} />\n                </Container>\n            </Section>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}